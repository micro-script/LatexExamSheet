%
% Copyright (c) 2022 Zeping Lee
% Released under the LaTeX Project Public License v1.3c License.
% Repository: https://gitee.com/zepinglee/exam-zh
%

\NeedsTeXFormat{LaTeX2e}

\RequirePackage{expl3}
\RequirePackage{xparse}

\ProvidesExplPackage {exam-zh-question} {2022-07-15} {v0.1.8}
  {exam-zh question module}

\RequirePackage { amsthm }
\RequirePackage { tikz }
\RequirePackage { zref-savepos }
\RequirePackage { ulem }

\ExplSyntaxOff
\usetikzlibrary{shapes.misc}
\ExplSyntaxOn



\NewDocumentCommand \questionsetup { m }
  { \keys_set:nn { exam-zh / question } { #1 } }
\NewDocumentCommand \fillinsetup { m }
  { \keys_set:nn { exam-zh / fillin } { #1 } }

% ulem 宏包重定义了 \emph，使用 \normalem 恢复
\normalem


% question 环境相关变量

% 计数器
\int_new:N \g__examzh_question_index_int
% 答案颜色
\tl_new:N \l__examzh_question_answer_color_tl
% 题目分数
\int_new:N \l__examzh_question_points_int
% 是否显示题目分数
\bool_new:N \l__examzh_question_show_points_bool
\bool_new:N \l__examzh_question_show_points_auto_bool
% 题目分数是否单独成段，解答题需要单独成段
\bool_new:N \l__examzh_question_points_separate_par_bool
% 是否显示括号
\bool_new:N \l__examzh_question_show_paren_bool
% 是否显示答案
\bool_new:N \l__examzh_question_show_answer_bool
\bool_new:N \l__examzh_question_show_fillin_answer_bool
\bool_new:N \l__examzh_question_show_paren_answer_bool
% 上下的间距
\skip_new:N \l__examzh_question_top_sep_skip
\skip_new:N \l__examzh_question_bottom_sep_skip


\keys_define:nn { exam-zh }
  { question .meta:nn = { exam-zh / question } {#1} }


\keys_define:nn { exam-zh / question }
  {
    % 手动调整 question 环境的计数器
    index               .int_gset:N = \g__examzh_question_index_int ,
    % 分数
    points              .int_set:N = \l__examzh_question_points_int ,
    % 分数显示控制
    show-points         .choice: ,
    show-points / auto  .code:n =
      { \bool_set_true:N \l__examzh_question_show_points_auto_bool } ,
    show-points / true  .code:n =
      {
        \bool_set_true:N  \l__examzh_question_show_points_bool
        \bool_set_false:N \l__examzh_question_show_points_auto_bool
      } ,
    show-points / false .code:n =
      {
        \bool_set_false:N \l__examzh_question_show_points_bool
        \bool_set_false:N \l__examzh_question_show_points_auto_bool
      } ,
    % 分数是否单独成段
    points-separate-par .bool_set:N = \l__examzh_question_points_separate_par_bool ,
    % 是否显示答案
    % show-answer         .bool_set:N = \l__examzh_question_show_answer_bool ,
    show-answer         .choice: ,
    show-answer / true .code:n = 
      {
        \bool_set_true:N \l__examzh_question_show_fillin_answer_bool
        \bool_set_true:N \l__examzh_question_show_paren_answer_bool
      },
    show-answer / false .code:n = 
      {
        \bool_set_false:N \l__examzh_question_show_fillin_answer_bool
        \bool_set_false:N \l__examzh_question_show_paren_answer_bool
      },
    % 上方间距
    top-sep             .skip_set:N = \l__examzh_question_top_sep_skip ,
    % 下方间距
    bottom-sep          .skip_set:N = \l__examzh_question_bottom_sep_skip ,
  }

\keys_set:nn { exam-zh / question }
  {
    points              = 0 ,
    show-points         = auto ,
    points-separate-par = false ,
    show-answer         = false ,
    top-sep             = .5em plus .5em minus .2em ,
    bottom-sep          = .5em plus .5em minus .2em 
  }



% 是否按照解答题的格式排版
\bool_new:N \l__examzh_question_problem_style_bool


% 选择题和填空题的题干
\NewDocumentEnvironment { question } { O { } +b }
  {
    \bool_set_false:N \l__examzh_question_problem_style_bool
    \__examzh_question_begin:nn {#1}{#2}
  }
  { \__examzh_question_end:nn {#1}{#2} }

% 解答题
\NewDocumentEnvironment { problem } { O { } +b }
  {
    \bool_set_true:N \l__examzh_question_problem_style_bool
    \__examzh_question_begin:nn {#1}{#2}
  }
  { \__examzh_question_end:nn {#1}{#2} }


\cs_new:Npn \__examzh_question_begin:nn #1#2
  {
    \par
    % 题干计数器的值加一
    \int_gincr:N \g__examzh_question_index_int
    % 根据是否按解答题方式排版来设置是否分数要分段
    \bool_if:NTF \l__examzh_question_problem_style_bool
      { \keys_set:nn { exam-zh / question } { points-separate-par = true  } }
      { \keys_set:nn { exam-zh / question } { points-separate-par = false } }
    % 设置键值
    \keys_set:nn { exam-zh / question } { #1 }
    % 设置上方间距
    \addvspace { \l__examzh_question_top_sep_skip }
    % 严格禁止孤行和寡行
    \int_set:Nn \clubpenalty { 10000 }
    \int_set:Nn \widowpenalty { 10000 }
    % 尽量避免在题目中间换行
    \int_set:Nn \interlinepenalty { 301 }
    % 这部分是仿照 source2e 中 enumerate 的定义写的
    % \@enumdepth 主要控制 enumerate 不同层级的编号
    % 这样设置后，在 question 中使用 enumerate 会调用 level 2 的编号
    % 也就是 question 中的 enumerate 环境直接从第二层开始
    \int_incr:N \@enumdepth
    % 如果 show-points = auto 那么解答题显示分数，选择题和填空题不显示分数
    % 这样设置考虑到选择题和填空题都是每道题一样的分数，在最开始的地方说明即可
    % 而解答题不太一样
    \bool_if:NT \l__examzh_question_show_points_auto_bool
      {
        \bool_if:NTF \l__examzh_question_problem_style_bool
          { \bool_set_true:N  \l__examzh_question_show_points_bool }
          { \bool_set_false:N \l__examzh_question_show_points_bool }
      }
    % 使用列表环境输出
    \list { \int_use:N \g__examzh_question_index_int . }
      {
        \dim_set:Nn \topsep    { 0pt }
        \dim_set:Nn \partopsep { 0pt }
        \dim_set:Nn \itemsep   { 0pt }
        \dim_set:Nn \parsep    { 0pt }
        \bool_if:NTF \l__examzh_question_problem_style_bool
          {
            % 解答题是正文 + 缩进 2em 的效果
            \dim_set:Nn \leftmargin { 0pt }
            \dim_set:Nn \itemindent { 2em }
          }
          {
            % 选择和填空题是悬挂效果
            \dim_set:Nn \leftmargin { 2em }
            \dim_set:Nn \itemindent { 0pt }
          }
        \dim_set:Nn \labelsep   { .7em  }
        \dim_set:Nn \labelwidth { 1.3em }
        \dim_set_eq:NN \listparindent \itemindent
      }
    \item \relax
    % 输出题目分数
    \bool_if:NT \l__examzh_question_show_points_bool
      {
        % 如果设置了分数且 show-points 的 bool 是 true 的话就显示
        \int_compare:nNnT { \l__examzh_question_points_int } > { 0 }
          { （ \int_use:N \l__examzh_question_points_int ~ 分 ） }
        % 是否分段（解答题需要分段）
        \bool_if:NT \l__examzh_question_points_separate_par_bool
          % \par 分段之后使用 \nopagebreak 避免分页导致序号和分数出现在页面最后一行
          { \par \nopagebreak }   
      }
  }


\cs_new:Npn \__examzh_question_end:nn #1#2
  {
    #2
    % 结束列表环境
    \endlist
    % 增加下方间距
    \addvspace { \l__examzh_question_bottom_sep_skip }
  }


% 选择题括号
% 控制括号是否右对齐
\bool_new:N \l__examzh_paren_type_hfill_bool
\keys_define:nn { exam-zh / paren }
  {
    show-answer .bool_set:N = \l__examzh_question_show_paren_answer_bool,
    text-color        .tl_set:N = \l__examzh_paren_text_color_tl ,
    % 是否显示选择题的括号
    show-paren          .bool_set:N = \l__examzh_question_show_paren_bool ,
    type .choice:,
    type / hfill .code:n =
      {
        \bool_set_true:N \l__examzh_paren_type_hfill_bool
      },
    type / none .code:n =
      {
        \bool_set_false:N \l__examzh_paren_type_hfill_bool
      },
  }
\keys_set:nn { exam-zh / paren }
  {
    show-answer = false,
    text-color  = black,
    show-paren  = false,
    type        = hfill
  }
\keys_define:nn { exam-zh }
  { paren .meta:nn = { exam-zh / paren } {#1} }
\NewDocumentCommand \paren { O { } }
  {
    % 如果开了 show answer 就默认 show paren 
    \bool_if:NT \l__examzh_question_show_paren_answer_bool
      { \bool_set_true:N \l__examzh_question_show_paren_bool }
    \bool_if:NT \l__examzh_question_show_paren_bool
      {
        % 使括号单独成行时居于右侧
        % \null -> \hbox{}
        % 𝖅𝖊𝖕𝖎𝖓𝖌 𝕷𝖊𝖊, [Mar 19, 2022 at 22:47:07]:
          % 这个写法是为了处理这样的情况：假设括号需要 3em 宽度，但是如果题干末尾只剩下了 2em 的空白，括号就必要另起一行，并且用 \hill 把括号推到最右侧
          % 所以中间用了两个 \hfill
          % 至于 \nobreak 和 \allowbreak 大概是为了能够同时处理「括号不换行」和「括号换行」两种情况
          % 这里参考 source2e 的 \@dottedtocline（目录的格式）
        % 控制是否 hfill 到行尾
        \bool_if:NT \l__examzh_paren_type_hfill_bool
          {
            \nobreak \hfill \allowbreak
            \null \nobreak \hfill \nobreak
          }
        \hbox:n
          {
            （
            \hbox_to_wd:nn { 3em }
              {
                \bool_if:NT \l__examzh_question_show_paren_answer_bool
                  { \hfill \__examzh_paren_print_answer:n {#1} \hfill }
              }
            ） \kern -.4em
          }
      }
  }
% “打印出”答案内容 因为 show 被用作“显示与否”的含义了，所以此处用 print
\cs_new:Npn \__examzh_fillin_print_answer:n #1
  {
    \group_begin:
      \tl_if_eq:NnF \l__examzh_fillin_text_color_tl { black }
        { \exp_args:NV \color \l__examzh_fillin_text_color_tl }
      #1
    \group_end:
  }
\cs_new:Npn \__examzh_paren_print_answer:n #1
  {
    \group_begin:
      \tl_if_eq:NnF \l__examzh_paren_text_color_tl { black }
        { \exp_args:NV \color \l__examzh_paren_text_color_tl }
      #1
    \group_end:
  }


% fillin 的下划线样式控制
\str_new:N \l__examzh_fillin_type_str

\keys_define:nn { exam-zh / fillin }
  {
    type .code:n = 
      {
        \str_set:Nn \l__examzh_fillin_type_str {#1}
      },
    show-blacktriangle .bool_set:N = \l__examzh_fillin_show_blacktriangle_bool,
    show-answer .bool_set:N = \l__examzh_question_show_fillin_answer_bool,
    width .skip_set:N = \l__examzh_fillin_F_width_skip,
    color .tl_set:N = \l__examzh_fillin_color_tl,
    text-color .tl_set:N = \l__examzh_fillin_text_color_tl,
  }
\keys_set:nn { exam-zh / fillin }
  {
    type               = line,
    show-blacktriangle = true,
    show-answer        = false,
    width              = 3em plus 1em minus 1em,
    color              = black,
    text-color         = black,
  }

\keys_define:nn { exam-zh }
  { fillin .meta:nn = { exam-zh / fillin } {#1} }


\dim_new:N \l__examzh_question_answer_depth_dim

% 填空命令
% \fillin \fillin[] \fillin[][] 在 show-blacktriangle = true, show-answer = false 的情况下就显示黑色三角形
\NewDocumentCommand \fillin { O{} o }
  {
    \group_begin:
      \IfNoValueTF {#2}
        {
          % \fillin[]
          % \tl_if_blank:nTF {#1}
            % {
              \bool_lazy_and:nnTF
                {
                  !\bool_if_p:N \l__examzh_question_show_fillin_answer_bool
                }
                {
                  \bool_if_p:N \l__examzh_fillin_show_blacktriangle_bool
                }
                {
                  \__examzh_fillin_without_judge:n { \__examzh_fillin_blacktriangle: }
                }
                { \__examzh_fillin:n {#1} }
            % }
            % {
              % \__examzh_fillin:n {#1}
            % }
        }
        {
          % \fillin[][]
          \keys_set:nn { exam-zh / fillin }
            {#1}
          % \tl_if_blank:nTF {#2}
            % {
              \bool_lazy_and:nnTF
                {
                  !\bool_if_p:N \l__examzh_question_show_fillin_answer_bool
                }
                {
                  \bool_if_p:N \l__examzh_fillin_show_blacktriangle_bool
                }
                {
                  \__examzh_fillin_without_judge:n { \__examzh_fillin_blacktriangle: }
                }
                { \__examzh_fillin:n {#2} }
            % }
            % {
              % \__examzh_fillin:n {#2}
            % }
        }
      \group_end:
    \space \ignorespaces
  }
\cs_new:Npn \__examzh_fillin_without_judge:n #1
  {
    % \ULdepth 是 \uline 的下划线的深度
    \dim_set:Nn \ULdepth { 0.3em }
    % lazy 版本是指需要判断时才去获取当前用于判断的 bool 值 
    % 而不是类似于“提前展开”，和项子越在 LaTeX3 的 b站视频里讲到的 lazy evaluation 想法相同
    \hbox_set:Nn \l_tmpa_box { \__examzh_fillin_print_answer:n {#1} }
    \dim_set:Nn \l__examzh_question_answer_depth_dim
      { \box_dp:N \l_tmpa_box }
    \__examzh_fillin_output_T:
  }
\cs_new:Npn \__examzh_fillin:n #1
  {
    % \ULdepth 是 \uline 的下划线的深度
    \dim_set:Nn \ULdepth { 0.3em }
    % lazy 版本是指需要判断时才去获取当前用于判断的 bool 值 
    % 而不是类似于“提前展开”，和项子越在 LaTeX3 的 b站视频里讲到的 lazy evaluation 想法相同
    \bool_lazy_and:nnTF
      { \bool_if_p:N \l__examzh_question_show_fillin_answer_bool }
      { \bool_not_p:n { \tl_if_empty_p:n {#1} } }
      {
        \hbox_set:Nn \l_tmpa_box { \__examzh_fillin_print_answer:n {#1} }
        \dim_set:Nn \l__examzh_question_answer_depth_dim
          { \box_dp:N \l_tmpa_box }
        \__examzh_fillin_output_T:
      }
      { 
        \__examzh_fillin_output_F:
      }
  }
\msg_new:nnn { exam-zh } { no-fillin-type }
  {
    There~is~no~type~of~\fillin~named~#1!\\
    Please~read~the~manual~for~more~details.
  }
\cs_new:Npn \__examzh_fillin_output_T:
  {
    \str_case:VnF \l__examzh_fillin_type_str
      {
        { line } { \__examzh_fillin_uline_T: }
        { paren } { \__examzh_fillin_paren_T: }
        { circle } { \__examzh_fillin_circle_T: }
        { blank } { \__examzh_fillin_blank_T: }
        { rectangle } { \__examzh_fillin_rectangle_T: }
      }
      {
        \msg_error:nnx { exam-zh } { no-fillin-type }
          { \l__examzh_fillin_type_str }
      }
  }
\cs_new:Npn \__examzh_fillin_output_F:
  {
    \str_case:VnF \l__examzh_fillin_type_str
      {
        { line } { \__examzh_fillin_uline_F: }
        { paren } { \__examzh_fillin_paren_F: }
        { circle } { \__examzh_fillin_circle_F: }
        { blank } { \__examzh_fillin_blank_F: }
        { rectangle } { \__examzh_fillin_rectangle_F: }
      }
      {
        \msg_error:nnx { exam-zh } { no-fillin-type }
          { \l__examzh_fillin_type_str }
      }
  }
\cs_new:Npn \__examzh_fillin_uline_T:
  {
    \uline
      {
        \hspace* { 1em plus .5em minus .5em }
        \dim_compare:nNnTF { \l__examzh_question_answer_depth_dim } > { 0.2em }
          {
            \dim_sub:Nn \l__examzh_question_answer_depth_dim { 0.2em }
            \raisebox { \l__examzh_question_answer_depth_dim }
              { \box_use_drop:N \l_tmpa_box }
          }
          { \box_use_drop:N \l_tmpa_box }
        \hspace* { 1em plus .5em minus .5em }
      }
  }
\cs_new:Npn \__examzh_fillin_uline_F:
  {
    \uline { \hspace* { \l__examzh_fillin_F_width_skip } } 
  }
\cs_new:Npn \__examzh_fillin_paren_T:
  {
    (
      \hspace* { 1em plus .5em minus .5em }
      \dim_compare:nNnTF { \l__examzh_question_answer_depth_dim } > { 0.2em }
        {
          \dim_sub:Nn \l__examzh_question_answer_depth_dim { 0.2em }
          \raisebox { \l__examzh_question_answer_depth_dim }
            { \box_use_drop:N \l_tmpa_box }
        }
        { \box_use_drop:N \l_tmpa_box }
      \hspace* { 1em plus .5em minus .5em }
    )
  }
\cs_new:Npn \__examzh_fillin_paren_F:
  {
    ( \hspace* { \l__examzh_fillin_F_width_skip} )
  }
\cs_new:Npn \__examzh_fillin_blank_T:
  {
    \hspace* { 1em plus .5em minus .5em }
    \dim_compare:nNnTF { \l__examzh_question_answer_depth_dim } > { 0.2em }
      {
        \dim_sub:Nn \l__examzh_question_answer_depth_dim { 0.2em }
        \raisebox { \l__examzh_question_answer_depth_dim }
          { \box_use_drop:N \l_tmpa_box }
      }
      { \box_use_drop:N \l_tmpa_box }
    \hspace* { 1em plus .5em minus .5em }
  }
\cs_new:Npn \__examzh_fillin_blank_F:
  {
    \hspace* { \l__examzh_fillin_F_width_skip}
  }
\tikzset
  {
    fillin-circle/.style = 
      {
        rounded~rectangle~west~arc = convex,
        draw, rounded~rectangle,
        color = \l__examzh_fillin_color_tl, text = \l__examzh_fillin_text_color_tl
      }
  }
\cs_new:Npn \__examzh_fillin_circle_T:
  {
    \hspace* { .5em minus .5em }
    \tikz[baseline=-3pt]
      {
        \node [fillin-circle] at (0,0) 
          { \box_use_drop:N \l_tmpa_box };
      }
    \hspace* { .5em minus .5em }
  }
\cs_new:Npn \__examzh_fillin_circle_F:
  {
    \hspace* { 1em plus .5em minus .5em }
    \tikz[baseline=-3pt]
      {
        \node [fillin-circle] at (0,0) 
          { \phantom{t} };
      }
    \hspace* { 1em plus .5em minus .5em }
  }
\cs_new:Npn \__examzh_fillin_rectangle_T:
  {
    \hspace* { .5em minus .5em }
    \begin{tikzpicture}[baseline = -3pt]
      \node[draw, color = \l__examzh_fillin_color_tl, text = \l__examzh_fillin_text_color_tl] 
        { \box_use_drop:N \l_tmpa_box };
    \end{tikzpicture}
    \hspace* { .5em minus .5em }
  }
\cs_new:Npn \__examzh_fillin_rectangle_F:
  {
    \hspace* { 1em plus .5em minus .5em }
    \begin{tikzpicture}[baseline = -3pt]
      \node[draw, color = \l__examzh_fillin_color_tl, text = \l__examzh_fillin_text_color_tl] 
        { \phantom{a} };
    \end{tikzpicture}
    \hspace* { 1em plus .5em minus .5em }
  }


\dim_new:N \l__examzh_blacktriangle_length_dim
\dim_set:Nn \l__examzh_blacktriangle_length_dim { .7em }
\cs_new:Npn \__examzh_fillin_blacktriangle:
  {
    \tikz[rounded~corners=0.5pt,baseline=0pt]
      {
        \fill[] (0,0) -- ++(60\c_colon_str \l__examzh_blacktriangle_length_dim) -- ++(-60\c_colon_str \l__examzh_blacktriangle_length_dim) -- cycle ;
      }
  }

\keys_define:nn { exam-zh / solution }
  {
    show-solution .bool_set:N = \l__examzh_solution_show_bool,
    show-qed      .bool_set:N = \l__examzh_solution_show_qed_bool,
    qedsymbol     .tl_set:N = \l__examzh_solution_qedsymbol_tl,
    label-content  .tl_set:N   = \l__examzh_solution_label_content_tl,
    label-punct    .tl_set:N   = \l__examzh_solution_label_punct_tl,
    score-showleader .bool_set:N = \l__examzh_score_show_leader_bool,
    score-pre-content .tl_set:N = \l__examzh_score_pre_content_tl,
    score-post-content .tl_set:N = \l__examzh_score_post_content_tl,
    score-format .tl_set:N = \l__examzh_score_format_tl,
    text-color .tl_set:N = \l__examzh_solution_text_color_tl
  }
\keys_set:nn { exam-zh / solution }
  {
    show-solution      = true,
    show-qed           = true,
    qedsymbol          = $\square$,
    label-content      = {解答},
    label-punct        = {},
    score-showleader   = true,
    score-pre-content  = {},
    score-post-content = 分,
    score-format       = \color{red},
    text-color         = black
  }
\keys_define:nn { exam-zh }
  { solution .meta:nn = { exam-zh / solution } {#1} }
% 解答题环境
\NewDocumentEnvironment { solution } { O{ \l__examzh_solution_label_content_tl } +b }
  {
    % 放在这是使得 \examsetup 设置 qedsymbol 可以放在正文区
    \cs_set_eq:NN \qedsymbol \l__examzh_solution_qedsymbol_tl
    \bool_if:NT \l__examzh_solution_show_bool
      {
        \__examzh_solution_print_answer:nn {#1} {#2}
      }
  }
  {}
\cs_new:Npn \__examzh_solution_print_answer:nn #1#2
  {
    \par
    \pushQED { \qed }
    \normalfont \topsep6 \p@ \@plus6 \p@ \relax
    \trivlist
    \item \relax
    \group_begin:
      \hspace* { 2\ccwd }
      \bfseries #1 
      \@addpunct { \l__examzh_solution_label_punct_tl }
    \group_end:
    \hspace \labelsep \ignorespaces
    \color { \l__examzh_solution_text_color_tl } #2
    \bool_if:NT \l__examzh_solution_show_qed_bool
      { \popQED }
    \endtrivlist 
    \@endpefalse
  }

% https://github.com/CTeX-org/forum/issues/256#issuecomment-1172319787
\zref@require@unique

\NewDocumentCommand { \score } { O{} m }
  {
    \group_begin:
      \mode_if_math:TF
        { 
          \__examzh_score_math_version:n { #2 }
        }
        { 
          \__examzh_score_text_version:n { #2 }
        }
    \group_end:
  }
\cs_new:Npn \__examzh_score_math_version:n #1
  {
    \bool_if:NTF \l__examzh_score_show_leader_bool
      {
        \__examzh_math_cdotfill:n 
          { 
            \l__examzh_score_format_tl
            \l__examzh_score_pre_content_tl
            #1
            \l__examzh_score_post_content_tl 
          }
      }
      {
        \__examzh_math_nodotfill:n
          {
            { 
              \l__examzh_score_format_tl
              \l__examzh_score_pre_content_tl
              #1
              \l__examzh_score_post_content_tl 
            }
          }
      }
  }
\cs_new:Npn \__examzh_score_text_version:n #1
  {
    \bool_if:NTF \l__examzh_score_show_leader_bool
      {
        \__examzh_cdotfill:
        \l__examzh_score_format_tl
        \l__examzh_score_pre_content_tl #1 \l__examzh_score_post_content_tl 
      }
      {
        \hfill
        \l__examzh_score_format_tl
        \l__examzh_score_pre_content_tl #1 \l__examzh_score_post_content_tl
      }
    \par \noindent \ignorespaces
  }
% 仿照 latex.ltx, line 651 的 \dotfill
\cs_new:Npn \__examzh_cdotfill:
  {
    \mode_leave_vertical:
    \cleaders
      \hbox_to_wd:nn { .44em } { \hss $\cdot$ \hss }
      \hfill \kern\z@
  }
\cs_new_protected:Npn \__examzh_math_nodotfill:n #1
  {
    \stepcounter { zref@unique }
    \hbox_overlap_right:n
      {
        \zsaveposx { \thezref@unique L }
        \zref@ifrefundefined { \thezref@unique R }
          { }
          {
            \skip_horizontal:n
              {
                  \zposx { \thezref@unique R } sp
                - \zposx { \thezref@unique L } sp
              }
          }
      }
    \tag * { \zsaveposx { \thezref@unique R } #1 }
  }
\cs_new_protected:Npn \__examzh_math_cdotfill:n #1
  {
    \stepcounter { zref@unique }
    \hbox_overlap_right:n
      {
        \zsaveposx { \thezref@unique L }
        \zref@ifrefundefined { \thezref@unique R }
          { }
          {
            \cleaders
              \hbox_to_wd:nn { .44em } { \hss $\cdot$ \hss }
              \skip_horizontal:n
                {
                    \zposx { \thezref@unique R } sp
                  - \zposx { \thezref@unique L } sp
                }
          }
      }
    \tag * { \zsaveposx { \thezref@unique R } #1 }
  }