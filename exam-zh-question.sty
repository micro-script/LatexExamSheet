%
% Copyright (c) 2022 Zeping Lee
% Released under the LaTeX Project Public License v1.3c License.
% Repository: https://gitee.com/zepinglee/exam-zh
%

\NeedsTeXFormat{LaTeX2e}

\RequirePackage{expl3}
\RequirePackage{xparse}

\ProvidesExplPackage {exam-zh-question} {2022-02-04} {v0.1.0}
    {exam-zh question module}


\RequirePackage{ulem}
% ulem 宏包重定义了 \emph，使用 \normalem 恢复
\normalem


% question 环境的计数器
\int_new:N \g__examzh_question_index_int
% question 环境的内容
\tl_new:N \l_examzh_question_answer_tl

% 答案颜色
\tl_new:N \l__examzh_question_answer_color_tl
% 题目分数
\int_new:N \l__examzh_question_points_int
% 是否显示题目分数
\bool_new:N \l__examzh_question_show_points_bool
\bool_new:N \l__examzh_question_show_points_auto_bool
% 题目分数是否单独成段，解答题需要单独成段
\bool_new:N \l__examzh_question_points_separate_par_bool
% 是否显示括号
\bool_new:N \l__examzh_question_show_paren_bool
% 是否显示答案
\bool_new:N \l__examzh_question_show_answer_bool
% 上下的间距
\skip_new:N \l__examzh_question_top_sep_skip
\skip_new:N \l__examzh_question_bottom_sep_skip

\keys_define:nn { exam-zh }
  { question .meta:nn = { exam-zh / question } {#1} }


\keys_define:nn { exam-zh / question }
  {
    % 答案颜色
    answer-color        .tl_set:N = \l__examzh_question_answer_color_tl ,
    % 手动调整question 环境的计数器
    index               .int_gset:N = \g__examzh_question_index_int ,
    % 分数
    points              .int_set:N = \l__examzh_question_points_int ,
    % 分数显示控制
    show-points         .choice: ,
    show-points / auto  .code:n =
      { \bool_set_true:N \l__examzh_question_show_points_auto_bool } ,
    show-points / true  .code:n =
      {
        \bool_set_true:N  \l__examzh_question_show_points_bool
        \bool_set_false:N \l__examzh_question_show_points_auto_bool
      } ,
    show-points / false .code:n =
      {
        \bool_set_false:N \l__examzh_question_show_points_bool
        \bool_set_false:N \l__examzh_question_show_points_auto_bool
      } ,
    % 分数是否单独成段
    points-separate-par .bool_set:N = \l__examzh_question_points_separate_par_bool ,
    % 是否显示选择题的括号
    show-paren          .bool_set:N = \l__examzh_question_show_paren_bool ,
    % 是否显示答案
    show-answer         .bool_set:N = \l__examzh_question_show_answer_bool ,
    % 上方间距
    top-sep             .skip_set:N = \l__examzh_question_top_sep_skip ,
    % 下方间距
    bottom-sep          .skip_set:N = \l__examzh_question_bottom_sep_skip ,
  }

\keys_set:nn { exam-zh / question }
  {
    answer-color        = black ,
    points              = 0 ,
    show-points         = auto ,
    points-separate-par = false ,
    show-paren          = false ,
    show-answer         = false ,
    top-sep             = .5em plus .5em minus .2em ,
    bottom-sep          = .5em plus .5em minus .2em ,
  }



% 是否按照解答题的格式排版
\bool_new:N \l__examzh_question_problem_style_bool


% 选择题和填空题的题干
\NewDocumentEnvironment { question } { O { } +b }
  {
    \bool_set_false:N \l__examzh_question_problem_style_bool
    \__examzh_question_begin:nn {#1}{#2}
  }
  { \__examzh_question_end:nn {#1}{#2} }

% 解答题
\NewDocumentEnvironment { problem } { O { } +b }
  {
    \bool_set_true:N \l__examzh_question_problem_style_bool
    \__examzh_question_begin:nn {#1}{#2}
  }
  { \__examzh_question_end:nn {#1}{#2} }


\cs_new:Npn \__examzh_question_begin:nn #1#2
  {
    \par
    % 题干计数器的值加一
    \int_gincr:N \g__examzh_question_index_int
    % 答案的内容清空
    \tl_clear:N \l_examzh_question_answer_tl
    % 根据是否按解答题方式排版来设置是否分数要分段
    \bool_if:NTF \l__examzh_question_problem_style_bool
      { \keys_set:nn { exam-zh / question } { points-separate-par = true  } }
      { \keys_set:nn { exam-zh / question } { points-separate-par = false } }
    % 设置键值
    \keys_set:nn { exam-zh / question } { #1 }
    % 设置上方间距
    \addvspace { \l__examzh_question_top_sep_skip }
    % 严格禁止孤行和寡行
    \int_set:Nn \clubpenalty { 10000 }
    \int_set:Nn \widowpenalty { 10000 }
    % 尽量避免在题目中间换行
    \int_set:Nn \interlinepenalty { 301 }
    % 这部分是仿照 source2e 中 enumerate 的定义写的
    % \@enumdepth 主要控制 enumerate 不同层级的编号
    % 这样设置后，在 question 中使用 enumerate 会调用 level 2 的编号
    % 也就是 question 中的 enumerate 环境直接从第二层开始
    \int_incr:N \@enumdepth
    % 如果 show-points = auto 那么解答题显示分数，填空题和选择题的不显示分数
    % 这样设置考虑到选择题和填空题都是每道题一样的分数，在最开始的地方说明即可
    % 而解答题不太一样
    \bool_if:NT \l__examzh_question_show_points_auto_bool
      {
        \bool_if:NTF \l__examzh_question_problem_style_bool
          { \bool_set_true:N  \l__examzh_question_show_points_bool }
          { \bool_set_false:N \l__examzh_question_show_points_bool }
      }
    % 使用列表环境输出
    \list { \int_use:N \g__examzh_question_index_int . }
      {
        \dim_set:Nn \topsep    { 0pt }
        \dim_set:Nn \partopsep { 0pt }
        \dim_set:Nn \itemsep   { 0pt }
        \dim_set:Nn \parsep    { 0pt }
        \bool_if:NTF \l__examzh_question_problem_style_bool
          {
            % 解答题是正文 + 缩进 2em 的效果
            \dim_set:Nn \leftmargin { 0pt }
            \dim_set:Nn \itemindent { 2em }
          }
          {
            % 选择和填空题是悬挂效果
            \dim_set:Nn \leftmargin { 2em }
            \dim_set:Nn \itemindent { 0pt }
          }
        \dim_set:Nn \labelsep   { .7em  }
        \dim_set:Nn \labelwidth { 1.3em }
        \dim_set_eq:NN \listparindent \itemindent
      }
    \item \relax
    % 输出题目分数
    \bool_if:NT \l__examzh_question_show_points_bool
      {
        % 如果设置了分数且 show-points 的 bool 是 true 的话就显示
        \int_compare:nNnT { \l__examzh_question_points_int } > { 0 }
          { （ \int_use:N \l__examzh_question_points_int ~ 分 ） }
        % 是否分段（解答题需要分段）
        \bool_if:NT \l__examzh_question_points_separate_par_bool
          % 应该是指par完之后避免分页，导致出现序号和分数出现在页面最后一行
          { \par \nopagebreak }   
      }
  }


\cs_new:Npn \__examzh_question_end:nn #1#2
  {
    #2
    \endlist   % 结束列表环境
    % 增加下方间距
    \addvspace { \l__examzh_question_bottom_sep_skip }
  }


% 选择题括号
\NewDocumentCommand \paren { O { } }
  {
    % 如果开了 show answer 就默认 show paren 
    \bool_if:NT \l__examzh_question_show_answer_bool
      { \bool_set_true:N \l__examzh_question_show_paren_bool }
    \bool_if:NT \l__examzh_question_show_paren_bool
      {
        % 使括号单独成行时居于右侧
        % \null -> \hbox{}
        % 𝖅𝖊𝖕𝖎𝖓𝖌 𝕷𝖊𝖊, [Mar 19, 2022 at 22:47:07]:
          % 这个写法是为了处理这样的情况：假设括号需要 3em 宽度，但是如果题干末尾只剩下了 2em 的空白，括号就必要另起一行，并且用 \hill 把括号推到最右侧
          % 所以中间用了两个 \hfill
          % 至于 \nobreak 和 \allowbreak 大概是为了能够同时处理「括号不换行」和「括号换行」两种情况
          % 这里参考 source2e 的 \@dottedtocline（目录的格式）
        \nobreak \hfill \allowbreak
        \null \nobreak \hfill \nobreak
        \hbox:n
          {
            （
            \hbox_to_wd:nn { 3em }
              {
                \bool_if:NT \l__examzh_question_show_answer_bool
                  { \hfill \__examzh_question_print_answer:n {#1} \hfill }
              }
            ） \kern -.4em
          }
      }
  }
% 本意是显示答案内容 因为 show 被用作“显示与否”的含义了，所以此处用 print
\cs_new:Npn \__examzh_question_print_answer:n #1
  {
    % \tl_set:Nn \l_examzh_question_answer_tl {#1}
    \group_begin:
      \tl_if_eq:NnF \l__examzh_question_answer_color_tl { black }
        { \exp_args:NV \color \l__examzh_question_answer_color_tl }
      #1
    \group_end:
  }

\bool_new:N \g__examzh_fillin_line_bool
\keys_define:nn { exam-zh / fillin }
  {
    type .choice:,
    type / line .code:n = 
      {
        \bool_gset_true:N \g__examzh_fillin_line_bool
      },
    type / paren .code:n = 
      {
        \bool_gset_false:N \g__examzh_fillin_line_bool
      }
  }
\keys_set:nn { exam-zh / fillin }
  {
    type = line
  }
\keys_define:nn { exam-zh }
  { fillin .meta:nn = { exam-zh / fillin } {#1} }


\dim_new:N \l__examzh_question_answer_depth_dim

% 填空命令
\NewDocumentCommand \fillin { O { } }
  {
    % \tl_set:Nn \l_examzh_question_answer_tl {#1}
    \group_begin:
      % \ULdepth 是 \uline 的下划线的深度
      \dim_set:Nn \ULdepth { 0.3em }
      % lazy 版本是指需要判断时才去获取当前用于判断的 bool 值 
      % 而不是类似于提前展开的感觉，就是项子越在 LaTeX3 的 b 站视频里讲到的 lazy evaluation 的味道
      \bool_lazy_and:nnTF
        { \bool_if_p:N \l__examzh_question_show_answer_bool }
        { \bool_not_p:n { \tl_if_empty_p:n {#1} } }
        {
          % 为什么要用 print answer 的 #1 而不是直接 #1 呢？
          % 是因为后面直接就通过 use_drop tmpa_box 来显示答案
          % 所以要把颜色加进去
          \hbox_set:Nn \l_tmpa_box { \__examzh_question_print_answer:n {#1} }
          \dim_set:Nn \l__examzh_question_answer_depth_dim
            { \box_dp:N \l_tmpa_box }
          \bool_if:NTF \g__examzh_fillin_line_bool
            { \__examzh_fillin_uline_T: }
            { \__examzh_fillin_paren_T: }
        }
        { 
          \bool_if:NTF \g__examzh_fillin_line_bool
            { \__examzh_fillin_uline_F: }
            { \__examzh_fillin_paren_F: }
        }
      \group_end:
    \space \ignorespaces
  }

\cs_new:Npn \__examzh_fillin_uline_T:
  {
    \uline
      {
        \hspace* { 1em plus .5em minus .5em }
        \dim_compare:nNnTF { \l__examzh_question_answer_depth_dim } > { 0.2em }
          {
            \dim_sub:Nn \l__examzh_question_answer_depth_dim { 0.2em }
            \raisebox { \l__examzh_question_answer_depth_dim }
              { \box_use_drop:N \l_tmpa_box }
          }
          { \box_use_drop:N \l_tmpa_box }
        \hspace* { 1em plus .5em minus .5em }
      }
  }

\cs_new:Npn \__examzh_fillin_paren_T:
  {
    (
      \hspace* { 1em plus .5em minus .5em }
      \dim_compare:nNnTF { \l__examzh_question_answer_depth_dim } > { 0.2em }
        {
          \dim_sub:Nn \l__examzh_question_answer_depth_dim { 0.2em }
          \raisebox { \l__examzh_question_answer_depth_dim }
            { \box_use_drop:N \l_tmpa_box }
        }
        { \box_use_drop:N \l_tmpa_box }
      \hspace* { 1em plus .5em minus .5em }
    )
  }
\cs_new:Npn \__examzh_fillin_uline_F:
  {
    \uline { \hspace* { 3em plus 1em minus 1em } } 
  }
\cs_new:Npn \__examzh_fillin_paren_F:
  {
    ( \hspace* { 3em plus 1em minus 1em } )
  }